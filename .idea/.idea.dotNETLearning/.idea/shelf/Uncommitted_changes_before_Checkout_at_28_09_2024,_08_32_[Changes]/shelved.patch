Index: dotNETLearning/Program.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using dotNETLearning;\nusing Microsoft.AspNetCore.Authentication;\nusing Microsoft.AspNetCore.Authentication.Cookies;\nusing System.Security.Claims;\n\nvar people = new List<Person>\n{\n    new Person(\"timoshka@mail.ru\", \"12345\"),\n    new Person(\"tima@mail.ru\", \"123\")\n};\n\nvar builder = WebApplication.CreateBuilder(args);\n\nbuilder.Services.AddAuthorization();\nbuilder.Services.AddAuthentication(CookieAuthenticationDefaults.AuthenticationScheme).AddCookie(options => options.LoginPath = \"/login\");\n\n\nbuilder.Logging.AddFile(Path.Combine(Directory.GetCurrentDirectory(), \"logger.txt\"));\n\n// Add services to the container.\nbuilder.Services.AddRazorPages();\n\nvar app = builder.Build();\n\n//app.UseDefaultFiles();\n//app.UseStaticFiles();\n\n// Configure the HTTP request pipeline.\nif (!app.Environment.IsDevelopment())\n{\n    app.UseExceptionHandler(\"/Error\");\n    // The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.\n    app.UseHsts();\n}\n\napp.UseHttpsRedirection();\napp.UseStaticFiles();\n\napp.UseRouting();\n\napp.UseAuthentication();\napp.UseAuthorization();\n\napp.MapRazorPages();\n\napp.Use(async (context, next) =>\n{\n    app.Logger.LogInformation($\"Path: {context.Request.Path} and Time: {DateTime.Now.ToLongTimeString()}\");\n    await next.Invoke(context);\n});\n\napp.MapGet(\"/login/{username}/{phoneNumber}/{company}\", async (string username, string phoneNumber, string company, HttpContext context) =>\n{\n    var claims = new List<Claim> {\n        new (ClaimTypes.Name, username),\n        new (ClaimTypes.MobilePhone, phoneNumber),\n        new (\"company\", company),\n        new (\"language\", \"Russian\"),\n        new (\"language\", \"English\"),\n        new (\"language\", \"Spanish\"),\n\n    };\n    var claimIdentity = new ClaimsIdentity(claims, \"Cookies\");\n    var claimPrincipal = new ClaimsPrincipal(claimIdentity);\n\n    await context.SignInAsync(claimPrincipal);\n    return Results.Redirect(\"/data\");\n});\n\napp.MapGet(\"/addage/{age}\", async (HttpContext context, string age) =>\n{\n    if (context.User.Identity is ClaimsIdentity claimsIdentity)\n    {\n        claimsIdentity.AddClaims(new[] { new Claim(\"age\", age) });\n        \n        var claimsPrincipal = new ClaimsPrincipal(claimsIdentity);\n        context.SignInAsync(claimsPrincipal);\n    }\n    return Results.Redirect(\"/data\");\n});\n\napp.MapGet(\"/removephone\", async (HttpContext context) =>\n{\n    if(context.User.Identity is ClaimsIdentity claimsIdentity)\n    {\n        var phoneNumber = claimsIdentity.FindFirst(ClaimTypes.MobilePhone);\n        if (claimsIdentity.TryRemoveClaim(phoneNumber))\n        {\n            var claimPrincipal = new ClaimsPrincipal (claimsIdentity);\n            await context.SignInAsync(claimPrincipal);\n        }\n    }\n    return Results.Redirect(\"/data\");\n});\n\n\napp.Map(\"/data\", (HttpContext context) =>\n{\n    var user = context.User.Identity;\n    var userName = context.User.FindFirst(ClaimTypes.Name);\n    var phoneNumber = context.User.FindFirst(ClaimTypes.MobilePhone);\n    var company = context.User.FindFirst(\"company\");\n    var age = context.User.FindFirst(\"age\");\n    var languages = context.User.FindAll(\"language\");\n    var stringLanguage = \"\";\n    foreach (var language in languages)\n    {\n        stringLanguage = $\"{stringLanguage} {language.Value}\";\n    }\n    if (user.IsAuthenticated)\n        return $\"Username: {userName?.Value} Phone: {phoneNumber?.Value} Company: {company?.Value} Age: {age} \\nLanguages: {stringLanguage}\";\n    else return \"������������ �� �����������������\";\n});\n\napp.MapGet(\"/logout\", async (HttpContext context) =>\n{\n    await context.SignOutAsync(CookieAuthenticationDefaults.AuthenticationScheme);\n    return \"������ �������\";\n});\n\napp.Run();\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dotNETLearning/Program.cs b/dotNETLearning/Program.cs
--- a/dotNETLearning/Program.cs	(revision 595e1ca49fb13672570aa30405322d12525142da)
+++ b/dotNETLearning/Program.cs	(date 1727243411823)
@@ -119,3 +119,5 @@
 });
 
 app.Run();
+
+
